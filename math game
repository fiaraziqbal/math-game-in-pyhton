import pygame
import random
import sys

# Initialize Pygame
pygame.init()

# Set up the display
WIDTH = 640
HEIGHT = 480
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Multiplication Game")

# Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
YELLOW = (255, 255, 0)

# Set up the clock
clock = pygame.time.Clock()

# Define game variables
score = 0
question_count = 0
game_font = pygame.font.Font(None, 36)
game_over_font = pygame.font.Font(None, 48)

# Player name input
def get_player_name():
    player_name = ''
    input_active = True
    while input_active:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_RETURN:
                    input_active = False
                elif event.key == pygame.K_BACKSPACE:
                    player_name = player_name[:-1]
                else:
                    player_name += event.unicode

        screen.fill(WHITE)
        name_prompt = game_font.render("Enter Your Name:", True, BLACK)
        name_prompt_rect = name_prompt.get_rect(center=(WIDTH/2, HEIGHT/2 - 50))
        screen.blit(name_prompt, name_prompt_rect)

        name_text = game_font.render(player_name, True, BLACK)
        name_rect = name_text.get_rect(center=(WIDTH/2, HEIGHT/2))
        screen.blit(name_text, name_rect)

        pygame.display.flip()
        clock.tick(30)

    return player_name

# Generate a new question based on difficulty level
def generate_question(difficulty):
    num1 = random.randint(1, 10 + difficulty)
    num2 = random.randint(1, 10 + difficulty)
    answer = num1 * num2
    return num1, num2, answer

# Check if the typed answer is correct
def check_answer(typed, answer):
    global score
    if int(typed) == answer:
        score += 1
        return True
    else:
        return False

# Show the game over screen
def show_game_over_screen(player_name):
    screen.fill(WHITE)
    game_over_text = game_over_font.render("Game Over", True, BLACK)
    game_over_rect = game_over_text.get_rect(center=(WIDTH/2, HEIGHT/2 - 50))
    screen.blit(game_over_text, game_over_rect)
    score_text = game_font.render(f"Score: {score}", True, BLACK)
    score_rect = score_text.get_rect(center=(WIDTH/2, HEIGHT/2))
    screen.blit(score_text, score_rect)

    # Save score to a file
    with open('scores.txt', 'a') as file:
        file.write(f"{player_name}: {score}\n")

    player_name_text = game_font.render(f"Player: {player_name}", True, BLACK)
    player_name_rect = player_name_text.get_rect(center=(WIDTH/2, HEIGHT/2 + 50))
    screen.blit(player_name_text, player_name_rect)

    restart_text = game_font.render("Press R to restart", True, BLACK)
    restart_rect = restart_text.get_rect(center=(WIDTH/2, HEIGHT/2 + 100))
    screen.blit(restart_text, restart_rect)

    pygame.display.flip()
    waiting = True
    while waiting:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_r:
                    return True

# Reset the game variables
def reset_game():
    global score, question_count
    score = 0
    question_count = 0

# Game loop
def game_loop():
    global score, question_count

    player_name = get_player_name()

    num1, num2, answer = generate_question(0)

    typed_answer = ''
    is_typing = True
    cursor_visible = True
    cursor_timer = pygame.time.get_ticks()

    start_time = pygame.time.get_ticks()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if is_typing:
                    if event.key == pygame.K_RETURN:
                        if check_answer(typed_answer, answer):
                            question_count += 1
                            if question_count % 5 == 0:
                                difficulty = question_count // 5
                                num1, num2, answer = generate_question(difficulty)
                            else:
                                num1, num2, answer = generate_question(question_count // 5)
                            typed_answer = ''
                            cursor_visible = True
                            start_time = pygame.time.get_ticks()
                        else:
                            if show_game_over_screen(player_name):
                                reset_game()
                                num1, num2, answer = generate_question(0)
                                typed_answer = ''
                                cursor_visible = True
                                start_time = pygame.time.get_ticks()
                            else:
                                pygame.quit()
                                sys.exit()
                    elif event.key == pygame.K_BACKSPACE:
                        typed_answer = typed_answer[:-1]
                    else:
                        typed_answer += event.unicode
                        cursor_visible = True
                        start_time = pygame.time.get_ticks()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if is_typing and event.button == 1:
                    if pygame.Rect(WIDTH - 100, 20, 80, 40).collidepoint(event.pos):
                        pygame.quit()
                        sys.exit()

        # Clear the screen
        screen.fill(WHITE)

        # Render the question
        question_text = f"What is {num1} x {num2}?"
        question_surface = game_font.render(question_text, True, BLACK)
        question_rect = question_surface.get_rect(center=(WIDTH/2, HEIGHT/2 - 50))
        screen.blit(question_surface, question_rect)

        # Render the typed answer
        if is_typing:
            typed_surface = game_font.render(typed_answer, True, BLACK)
            typed_rect = typed_surface.get_rect(center=(WIDTH/2, HEIGHT/2))
            screen.blit(typed_surface, typed_rect)

        # Render the cursor
        if cursor_visible and is_typing:
            pygame.draw.line(screen, BLACK, (typed_rect.right + 5, typed_rect.centery), (typed_rect.right + 5, typed_rect.centery + 15), 2)
            if pygame.time.get_ticks() - cursor_timer >= 500:
                cursor_visible = False
                cursor_timer = pygame.time.get_ticks()
        else:
            cursor_visible = True
            cursor_timer = pygame.time.get_ticks()

        # Render the score
        score_text = f"Score: {score}"
        score_surface = game_font.render(score_text, True, BLACK)
        score_rect = score_surface.get_rect(topright=(WIDTH-20, 20))
        screen.blit(score_surface, score_rect)

        # Render the quit button
        quit_text = game_font.render("Quit", True, BLACK)
        quit_rect = quit_text.get_rect(topright=(WIDTH - 30, 30))
        screen.blit(quit_text, quit_rect)

        # Render the timer
        elapsed_time = pygame.time.get_ticks() - start_time
        remaining_time = max(0, 5000 - elapsed_time)
        timer_text = f"Time: {remaining_time // 1000}.{remaining_time % 1000 // 100}"
        timer_surface = game_font.render(timer_text, True, BLACK)
        timer_rect = timer_surface.get_rect(topleft=(20, 20))
        screen.blit(timer_surface, timer_rect)

        # Check if time is up
        if remaining_time <= 0:
            if show_game_over_screen(player_name):
                reset_game()
                num1, num2, answer = generate_question(0)
                typed_answer = ''
                cursor_visible = True
                start_time = pygame.time.get_ticks()
            else:
                pygame.quit()
                sys.exit()

        pygame.display.flip()
        clock.tick(30)

# Run the game
game_loop()
